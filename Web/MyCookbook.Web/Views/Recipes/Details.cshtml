@using MyCookbook.Web.ViewModels.Recipes.Details
@using MyCookbook.Data.Models.Enums
@using MyCookbook.Web.Infrastructure
@using MyCookbook.Web.Infrastructure.Extensions
@using System.ComponentModel.DataAnnotations;
@using MyCookbook.Common
@model RecipeDetailsViewModel

@{
    this.ViewData["Title"] = Model.Title;
    var isUserLoggedIn = this.User.Identity.IsAuthenticated ? 1 : 0;
}

<div class="row">
    <div class="col-md-7">
        <h2>@Model.Title</h2>
        <div id="carouselRecipeImages" class="carousel slide rounded" data-ride="carousel">
            <ol class="carousel-indicators">
                <li data-target="#carouselRecipeImages" data-slide-to="0" class="active"></li>

                @for (int i = 1; i < Model.Images.Count() - 1; i++)
                {
                    <li data-target="#carouselRecipeImages" data-slide-to="@i"></li>
                }
            </ol>
            <div class="carousel-inner rounded">

                @for (int i = 0; i < Model.Images.OrderBy(x => x.IsTitlePhoto).Count(); i++)
                {
                    if (Model.Images[i].IsTitlePhoto)
                    {
                        <div class="carousel-item active">
                            <img class="d-block w-100" height="300" src="@Model.Images[i].Url" alt="Снимка @i">
                        </div>
                    }
                    else
                    {
                        <div class="carousel-item">
                            <img class="d-block w-100" height="300" src="@Model.Images[i].Url" alt="Снимка @i">
                        </div>
                    }
                }
            </div>
            <a class="carousel-control-prev" href="#carouselRecipeImages" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#carouselRecipeImages" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
        <hr class="border" />
        <div class="row rounded border" style="background-color:lightgray">
            <div class="col-md-3">
                <p></p>
                <div>
                    <div class="text-md-center"><i class="far fa-clock fa-2x"></i></div>
                    <div class="text-md-center"><strong>Приготвяне</strong></div>
                    <div class="text-md-center">@Model.PrepTime мин.</div>
                </div>
            </div>
            <div class="col-md-2">
                <p></p>
                <div>
                    <div class="text-md-center"><i class="far fa-clock fa-2x"></i></div>
                    <div class="text-md-center"><strong>Готвене</strong></div>
                    <div class="text-md-center">@Model.CookTime мин.</div>
                </div>
            </div>
            <div class="col-md-2">
                <p></p>
                <div>
                    <div class="text-md-center"><i class="fas fa-stopwatch fa-2x"></i></div>
                    <div class="text-md-center"><strong>Общо</strong></div>
                    <div class="text-md-center">@Model.TotalTime мин.</div>
                </div>
            </div>
            <hr style="width: 1px; height: 80px; background: black; border: none;" />
            <div class="col-md-3">
                <p></p>
                <div>
                    <div class="text-md-center"><i class="fas fa-utensils fa-2x"></i></div>
                    <div class="text-md-center"><strong>Порции</strong></div>
                    <div class="text-md-center">@Model.Servings</div>
                </div>
            </div>
            <div class="col-md-1"></div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="media">
            <img height="70" width="70" class="align-self-center mr-3 rounded-circle" src="@Model.Author.ProfilePhoto" alt="Снимка на автора">
            <div class="media-body">
                <h5 class="mt-0">Автор</h5>
                <p>@Model.Author.FullName, @Model.Author.Age</p>
            </div>
        </div>
        <hr class="border" />
        <div class="media">
            <img height="25" width="35" class="align-self-center mr-3" src="@Model.Cuisine.ImageUrl" alt="знаме">
            <div class="media-body">
                <p>@Model.Cuisine.Name</p>
            </div>
        </div>
        <div>
            <span class="font-weight-bold">Категоря:</span>
            <span>@Model.CategoryName</span>
        </div>
        <div class="media">
            <span class="font-weight-bold">Метод на приготвяне: </span>
            @string.Join(", ", Model.RecipesCookingMethods.Select(x => x.Name))
        </div>
        <div>
            <span class="font-weight-bold">Рецепта за: </span>
            <span>
                @{
                    var skillLevel = Model.SkillLevel.GetAttribute<DisplayAttribute>();
                }
                @skillLevel.Name
            </span>
        </div>
        <div>
            <span class="font-weight-bold">Подходяща за: </span>
            <span>
                @{
                    var seazonalType = Model.SeasonalType.GetAttribute<DisplayAttribute>();
                }
                @seazonalType.Name
            </span>
        </div>
        <div>
            <span class="font-weight-bold">Сготвена: </span>
            <span id="cookTimes">
                @Model.Cooked
            </span> пъти
        </div>
        <div>
            <span class="font-weight-bold">Рейтинг: </span>
            <span id="rating">
                @Model.Ratings
            </span>
            <span>/5</span>
        </div>
        <hr class="border" />
        <div id="favoriteDiv" class="form-group">
            <span>
                <strong>Добави в любими</strong>
            </span>
            <span id="favoriteSpan">
                @{
                    var colorFavorite = "color:gray";
                }

                @if (this.User.Identity.IsAuthenticated)
                {
                    @if (Model.User.IsUserFavorite)
                    {
                        colorFavorite = "color:red";
                    }
                }

                <a href="#" onclick="addToFavorite(@Model.Id, @isUserLoggedIn)" style=@colorFavorite>
                    <i class="fas fa-heart fa-2x"></i>
                </a>

            </span>
        </div>
        <div id="cookedDiv">
            <span>
                <strong>Аз сготвих</strong>
            </span>
            <span id="cookedSpan">
                @{
                    var colorCooked = "color:gray";
                }

                @if (this.User.Identity.IsAuthenticated)
                {
                    @if (Model.User.IsUserCooked)
                    {
                        colorCooked = "color:limegreen";
                    }
                }

                <a href="#" onclick="addToCooked(@Model.Id, @isUserLoggedIn)" style=@colorCooked>
                    <i class="fas fa-check fa-3x"></i>
                </a>

            </span>
        </div>
        <hr class="border" />
        <form id="ratingForm" method="post"></form>
        <div class="row">
            <div class="col-md-4">
                <strong>Оцени рецептата:</strong>
            </div>
            <div id="divStars" class="col-md-8">
                @for (int i = 1; i <= 5; i++)
                {
                    var colorStars = "color:gray";

                    @if (this.User.Identity.IsAuthenticated)
                    {
                        if (i <= Model.User.UsersStars)
                        {
                            colorStars = "color:gold";
                        }
                    }

                    <a href="#" onclick="rating(@Model.Id, @i, @isUserLoggedIn)" style=@colorStars>
                        <i class="fas fa-star fa-2x"></i>
                    </a>
                }
            </div>
        </div>
    </div>
</div>
<p></p>
<div class="row">
    <div class="col-md-4 border rounded">
        <h3>Съставки</h3>
        <ul>
            @foreach (var ingredinet in Model.Ingredients)
            {
                <li>@ingredinet.Name</li>
            }
        </ul>
    </div>
    <div class="col-md-8 border rounded">
        <h3>Начин на приготвяне</h3>
        @Model.Description
    </div>
</div>
<hr class="border" />
<h4>Още рецепти от категория "@Model.CategoryName"</h4>
<div class="row row-cols-1 row-cols-md-3">
    @foreach (var similarRecipe in Model.SimilarRecipes)
    {
        <div class="col mb-4">
            <div class="card">
                <a asp-controller="Recipes" asp-action="Details" asp-route-id="@similarRecipe.Id">
                    @if (@similarRecipe.TitlePhotoUrl == null)
                    {
                        <img src="@GlobalConstants.DefaultRecipeImageUrl" class="card-img-top" height="200" alt="Снимка на рецептата">
                    }
                    else
                    {
                        <img src="@similarRecipe.TitlePhotoUrl" class="card-img-top" height="200" alt="Снимка на рецептата">
                    }

                    <div class="card-body">
                        <h5 class="card-title">@similarRecipe.Title</h5>
                    </div>
                </a>
            </div>
        </div>
    }
</div>
<h6 class="text-md-center">Виж всички рецепти от категория "@Model.CategoryName"</h6>

@if (this.User.Identity.IsAuthenticated)
{
    <div class="px-4 pt-3"> <button type="button" class="btn btn-primary float-right" onclick="showAddCommentForm(null)"><i class="fa fa-plus"></i>&nbsp; Коментирай</button> </div>
    <div class="clearfix"></div>
}

@foreach (var comment in Model.Comments)
{
    <div class="container-fluid mt-100">
        <div class="row">
            <div class="col-md-12">
                <div class="card mb-4">
                    <div class="card-header">
                        <div class="media flex-wrap w-100 align-items-center">
                            <img src=@comment.User.ProfilePhoto height="40" width="40" class="align-self-center mr-3 rounded-circle" alt="Снимка на коментатора" />
                            <div class="media-body">
                                @comment.User.FullName, @comment.User.Age
                                <div class="text-muted small">
                                    <time datetime="@comment.CreatedOn.ToString("O")"></time>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <article>
                            @comment.Content
                        </article>

                        @if (this.User.Identity.IsAuthenticated)
                        {
                            <div class="px-4 pt-3 mt-1"> <button type="button" class="btn btn-secondary float-right mb-1" onclick='showAddCommentForm("@comment.Id")'><i class="fa fa-comment"></i>&nbsp; Отговор</button> </div>
                            <div class="clearfix"></div>
                        }
                        @foreach (var reply in comment.Replies)
                        {
                            <div class="container-fluid mt-100">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="card mb-4">
                                            <div class="card-header">
                                                <div class="media flex-wrap w-100 align-items-center">
                                                    <img src=@reply.User.ProfilePhoto height="40" width="40" class="align-self-center mr-3 rounded-circle" alt="Снимка на коментатора" />
                                                    <div class="media-body">
                                                        @reply.User.FullName, @reply.User.Age
                                                        <div class="text-muted small">
                                                            <time datetime="@reply.CreatedOn.ToString("O")"></time>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="card-body">
                                                <article>
                                                    @reply.Content
                                                </article>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    <form asp-controller="Comments" asp-action="Create" method="post" id="AddCommentForm" style="display: none">
        <input type="hidden" name="RecipeId" value="@this.Model.Id" />
        <input type="hidden" name="CommentId" value="null" />
        <div>
            <label for="Content"></label>
            <textarea name="Content" id="Content" class="form-control" rows="5"></textarea>
        </div>
        <div>
            <input type="submit" class="btn btn-primary" value="Добави коментар" />
        </div>
    </form>
</div>


@section Scripts {
    <script>
        function showAddCommentForm(commentId) {
            $("#AddCommentForm input[name='CommentId']").val(commentId);
            $("#AddCommentForm").show();
            $([document.documentElement, document.body]).animate({
                scrollTop: $("#AddCommentForm").offset().top
            }, 1000);
        }
    </script>
    <script>
        var isPushedButtonStars = false;

        function rating(recipeId, countStars, isUserLoggedIn) {
            if (isUserLoggedIn == 0) {

                if (isPushedButtonStars == false) {
                    document.getElementById("divStars").innerHTML += "Само за регистрирани потребители!";
                }
                isPushedButtonStars = true;
            }
            else {
                var token = $("#ratingForm input[name=__RequestVerificationToken]").val();
                var json = { recipeId: recipeId, stars: countStars };
                $.ajax({
                    url: "/api/ratings",
                    type: "POST",
                    data: JSON.stringify(json),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    headers: { 'X-CSRF-TOKEN': token },
                    success: function (data) {
                        $("#rating").html(data.ratings);
                        var div = document.getElementById("divStars");
                        var anchor = div.getElementsByTagName("a");

                        for (i = 0; i < anchor.length; i++) {

                            if (i <= countStars - 1) {
                                anchor[i].style.color = 'gold'
                            }
                            else {
                                anchor[i].style.color = 'gray'
                            }
                        }
                    }
                });
            }
        }
    </script>
    <script>
        var isPushedButtonfavorite = false;

        function addToFavorite(recipeId, isUserLoggedIn) {

            if (isUserLoggedIn == 0) {

                if (isPushedButtonfavorite == false) {
                    document.getElementById("favoriteDiv").innerHTML += "Само за регистрирани потребители!";
                }
                isPushedButtonfavorite = true;
            }
            else {
                var token = $("#ratingForm input[name=__RequestVerificationToken]").val();
                var json = { recipeId: recipeId };
                $.ajax({
                    url: "/api/favorites",
                    type: "POST",
                    data: JSON.stringify(json),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    headers: { 'X-CSRF-TOKEN': token },
                    success: function (data) {
                        var span = document.getElementById("favoriteSpan");
                        var anchor = span.getElementsByTagName("a");

                        if (data.isAdded) {
                            anchor[0].style.color = 'red'
                        }
                        else {
                            anchor[0].style.color = 'gray'
                        }
                    }
                });
            }
        }
    </script>
    <script>
        var isPushedButtonCooked = false;

        function addToCooked(recipeId, isUserLoggedIn) {

            if (isUserLoggedIn == 0) {

                if (isPushedButtonCooked == false) {
                    document.getElementById("cookedDiv").innerHTML += "Само за регистрирани потребители!";
                }
                isPushedButtonCooked = true;
            }
            else {
                var token = $("#ratingForm input[name=__RequestVerificationToken]").val();
                var json = { recipeId: recipeId };
                $.ajax({
                    url: "/api/Cooked",
                    type: "POST",
                    data: JSON.stringify(json),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    headers: { 'X-CSRF-TOKEN': token },
                    success: function (data) {
                        $("#cookTimes").html(data.cookTimes);
                        var span = document.getElementById("cookedSpan");
                        var anchor = span.getElementsByTagName("a");

                        if (data.isAdded) {
                            anchor[0].style.color = 'limegreen'
                        }
                        else {
                            anchor[0].style.color = 'gray'
                        }
                    }
                });
            }
        }
    </script>
}